---
name: Pass the VAR

on:
  push:
    branches: [main]
    paths:
      - .github/workflows/pass-the-var.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read
  statuses: write
  pull-requests: write

jobs:
  envars:
    runs-on: ubuntu-latest
    outputs:
      vars: ${{ steps.envars.outputs.result }}
    steps:
      - uses: actions/github-script@v6
        id: envars
        env:
          FIRST_NAME: Ion
          LAST_NAME: Top
        with:
          result-encoding: string
          script: |
            const obj = Object.fromEntries(
              Object.entries(process.env)
              .filter(([key]) => ['FIRST_NAME', 'LAST_NAME'].includes(key))
            )
            console.log({obj})
            return JSON.stringify(obj)

      - name: Get result
        run: echo "${{steps.envars.outputs.result}}"

  output:
    runs-on: ubuntu-latest
    needs: envars
    steps:
      - name: Get env vars and save .env.json
        run: |
          echo "RAW: ${{ needs.envars.outputs.vars }}"
          echo "fromJSON: ${{ fromJson(needs.envars.outputs.vars) }}"
          touch .env.json
          echo "${{ needs.envars.outputs.vars }}" >> .env.json
          cat .env.json

      - name: convert JSON to .env
        uses: ricosandyca/convert-env-json@main
        with:
          type: json-to-env
          input_path: .env.json
          output_path: .env

      - name: Set env vars from .env
        run: test -f .env && cat .env >> "$GITHUB_ENV"

      - name: Test env vars
        run: echo "Hello, $FIRST_NAME $LAST_NAME"
